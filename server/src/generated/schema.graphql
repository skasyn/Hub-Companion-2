### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Activity {
  code: String!
  date: DateTime
  description: String
  id: ID!
  registered(after: String, before: String, first: Int, last: Int, orderBy: UserPresenceOrderByInput, skip: Int, where: UserPresenceWhereInput): [UserPresence!]
  title: String!
  type: String!
  xp: Int
}

input ActivityWhereInput {
  AND: [ActivityWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  date: DateTime
  date_gt: DateTime
  date_gte: DateTime
  date_in: [DateTime!]
  date_lt: DateTime
  date_lte: DateTime
  date_not: DateTime
  date_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  registered_some: UserPresenceWhereInput
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  type: String
  type_contains: String
  type_ends_with: String
  type_gt: String
  type_gte: String
  type_in: [String!]
  type_lt: String
  type_lte: String
  type_not: String
  type_not_contains: String
  type_not_ends_with: String
  type_not_in: [String!]
  type_not_starts_with: String
  type_starts_with: String
  xp: Int
  xp_gt: Int
  xp_gte: Int
  xp_in: [Int!]
  xp_lt: Int
  xp_lte: Int
  xp_not: Int
  xp_not_in: [Int!]
}

scalar DateTime

type Mutation {
  refresh: Boolean!
}

type Query {
  login(code: String): User!
  loginCookie(code: String): User!
  user(where: UserWhereUniqueInput!): User
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]!
}

type User {
  activities(after: String, before: String, first: Int, last: Int, orderBy: UserPresenceOrderByInput, skip: Int, where: UserPresenceWhereInput): [UserPresence!]
  email: String!
  id: ID!
  name: String!
  outlookId: String!
  plan: Int
  privilege: Int
  xp: Int
  year: Int
}

enum UserOrderByInput {
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  outlookId_ASC
  outlookId_DESC
  plan_ASC
  plan_DESC
  privilege_ASC
  privilege_DESC
  xp_ASC
  xp_DESC
  year_ASC
  year_DESC
}

type UserPresence {
  activity: Activity!
  code: String!
  id: ID!
  presence: Boolean
  user: User!
}

enum UserPresenceOrderByInput {
  code_ASC
  code_DESC
  id_ASC
  id_DESC
  presence_ASC
  presence_DESC
}

input UserPresenceWhereInput {
  activity: ActivityWhereInput
  AND: [UserPresenceWhereInput!]
  code: String
  code_contains: String
  code_ends_with: String
  code_gt: String
  code_gte: String
  code_in: [String!]
  code_lt: String
  code_lte: String
  code_not: String
  code_not_contains: String
  code_not_ends_with: String
  code_not_in: [String!]
  code_not_starts_with: String
  code_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  presence: Boolean
  presence_not: Boolean
  user: UserWhereInput
}

input UserWhereInput {
  activities_some: UserPresenceWhereInput
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  outlookId: String
  outlookId_contains: String
  outlookId_ends_with: String
  outlookId_gt: String
  outlookId_gte: String
  outlookId_in: [String!]
  outlookId_lt: String
  outlookId_lte: String
  outlookId_not: String
  outlookId_not_contains: String
  outlookId_not_ends_with: String
  outlookId_not_in: [String!]
  outlookId_not_starts_with: String
  outlookId_starts_with: String
  plan: Int
  plan_gt: Int
  plan_gte: Int
  plan_in: [Int!]
  plan_lt: Int
  plan_lte: Int
  plan_not: Int
  plan_not_in: [Int!]
  privilege: Int
  privilege_gt: Int
  privilege_gte: Int
  privilege_in: [Int!]
  privilege_lt: Int
  privilege_lte: Int
  privilege_not: Int
  privilege_not_in: [Int!]
  xp: Int
  xp_gt: Int
  xp_gte: Int
  xp_in: [Int!]
  xp_lt: Int
  xp_lte: Int
  xp_not: Int
  xp_not_in: [Int!]
  year: Int
  year_gt: Int
  year_gte: Int
  year_in: [Int!]
  year_lt: Int
  year_lte: Int
  year_not: Int
  year_not_in: [Int!]
}

input UserWhereUniqueInput {
  email: String
  id: ID
  outlookId: String
}
