/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Activity: ActivityObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      ActivityConnection: ActivityConnectionObject
      ActivityEdge: ActivityEdgeObject
      AggregateActivity: AggregateActivityObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      ActivitySubscriptionPayload: ActivitySubscriptionPayloadObject
      ActivityPreviousValues: ActivityPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Activity: ActivityFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      ActivityConnection: ActivityConnectionFieldDetails
      ActivityEdge: ActivityEdgeFieldDetails
      AggregateActivity: AggregateActivityFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      ActivitySubscriptionPayload: ActivitySubscriptionPayloadFieldDetails
      ActivityPreviousValues: ActivityPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      ActivityWhereInput: ActivityWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      ActivityWhereUniqueInput: ActivityWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      ActivityCreateManyWithoutRegisteredInput: ActivityCreateManyWithoutRegisteredInputInputObject
      ActivityCreateWithoutRegisteredInput: ActivityCreateWithoutRegisteredInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      ActivityUpdateManyWithoutRegisteredInput: ActivityUpdateManyWithoutRegisteredInputInputObject
      ActivityUpdateWithWhereUniqueWithoutRegisteredInput: ActivityUpdateWithWhereUniqueWithoutRegisteredInputInputObject
      ActivityUpdateWithoutRegisteredDataInput: ActivityUpdateWithoutRegisteredDataInputInputObject
      ActivityUpsertWithWhereUniqueWithoutRegisteredInput: ActivityUpsertWithWhereUniqueWithoutRegisteredInputInputObject
      ActivityScalarWhereInput: ActivityScalarWhereInputInputObject
      ActivityUpdateManyWithWhereNestedInput: ActivityUpdateManyWithWhereNestedInputInputObject
      ActivityUpdateManyDataInput: ActivityUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      ActivityCreateInput: ActivityCreateInputInputObject
      UserCreateManyWithoutActivitiesInput: UserCreateManyWithoutActivitiesInputInputObject
      UserCreateWithoutActivitiesInput: UserCreateWithoutActivitiesInputInputObject
      ActivityUpdateInput: ActivityUpdateInputInputObject
      UserUpdateManyWithoutActivitiesInput: UserUpdateManyWithoutActivitiesInputInputObject
      UserUpdateWithWhereUniqueWithoutActivitiesInput: UserUpdateWithWhereUniqueWithoutActivitiesInputInputObject
      UserUpdateWithoutActivitiesDataInput: UserUpdateWithoutActivitiesDataInputInputObject
      UserUpsertWithWhereUniqueWithoutActivitiesInput: UserUpsertWithWhereUniqueWithoutActivitiesInputInputObject
      UserScalarWhereInput: UserScalarWhereInputInputObject
      UserUpdateManyWithWhereNestedInput: UserUpdateManyWithWhereNestedInputInputObject
      UserUpdateManyDataInput: UserUpdateManyDataInputInputObject
      ActivityUpdateManyMutationInput: ActivityUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      ActivitySubscriptionWhereInput: ActivitySubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    ActivityOrderByInput: ActivityOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'activity', args?: QueryActivityArgs[] | false, alias?: string  } 
  | { name: 'activities', args?: QueryActivitiesArgs[] | false, alias?: string  } 
  | { name: 'activitiesConnection', args?: QueryActivitiesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'activity'
  | 'activities'
  | 'activitiesConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryActivityArgs =
  | 'where'
type QueryActivitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryActivitiesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  activity: {
    type: 'Activity'
    args: Record<QueryActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity | null> | prisma.Activity | null
  }
  activities: {
    type: 'Activity'
    args: Record<QueryActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ActivityWhereInput | null, orderBy?: prisma.ActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity[]> | prisma.Activity[]
  }
  activitiesConnection: {
    type: 'ActivityConnection'
    args: Record<QueryActivitiesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ActivityWhereInput | null, orderBy?: prisma.ActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ActivityConnection> | prisma.ActivityConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 
  | { name: 'year', args?: [] | false, alias?: string  } 
  | { name: 'plan', args?: [] | false, alias?: string  } 
  | { name: 'acculturation', args?: [] | false, alias?: string  } 
  | { name: 'experimentation', args?: [] | false, alias?: string  } 
  | { name: 'fruition', args?: [] | false, alias?: string  } 
  | { name: 'sharing', args?: [] | false, alias?: string  } 
  | { name: 'privilege', args?: [] | false, alias?: string  } 
  | { name: 'activities', args?: UserActivitiesArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'name'
  | 'email'
  | 'token'
  | 'year'
  | 'plan'
  | 'acculturation'
  | 'experimentation'
  | 'fruition'
  | 'sharing'
  | 'privilege'
  | 'activities'


type UserActivitiesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  year: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  plan: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  acculturation: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  experimentation: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fruition: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  sharing: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  privilege: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  activities: {
    type: 'Activity'
    args: Record<UserActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ActivityWhereInput | null, orderBy?: prisma.ActivityOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity[]> | prisma.Activity[]
  }
}
  

// Types for Activity

type ActivityObject =
  | ActivityFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'code', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'investment_type', args?: [] | false, alias?: string  } 
  | { name: 'investment_points', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 
  | { name: 'registered', args?: ActivityRegisteredArgs[] | false, alias?: string  } 

type ActivityFields =
  | 'id'
  | 'code'
  | 'type'
  | 'investment_type'
  | 'investment_points'
  | 'title'
  | 'description'
  | 'date'
  | 'registered'


type ActivityRegisteredArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface ActivityFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  investment_type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  investment_points: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  registered: {
    type: 'User'
    args: Record<ActivityRegisteredArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Activity">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ActivityConnection

type ActivityConnectionObject =
  | ActivityConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ActivityConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ActivityConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ActivityEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ActivityEdge[]> | prisma.ActivityEdge[]
  }
  aggregate: {
    type: 'AggregateActivity'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ActivityConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateActivity> | prisma.AggregateActivity
  }
}
  

// Types for ActivityEdge

type ActivityEdgeObject =
  | ActivityEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ActivityEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ActivityEdgeFieldDetails {
  node: {
    type: 'Activity'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ActivityEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity> | prisma.Activity
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateActivity

type AggregateActivityObject =
  | AggregateActivityFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateActivityFields =
  | 'count'



  

export interface AggregateActivityFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createActivity', args?: MutationCreateActivityArgs[] | false, alias?: string  } 
  | { name: 'updateActivity', args?: MutationUpdateActivityArgs[] | false, alias?: string  } 
  | { name: 'updateManyActivities', args?: MutationUpdateManyActivitiesArgs[] | false, alias?: string  } 
  | { name: 'upsertActivity', args?: MutationUpsertActivityArgs[] | false, alias?: string  } 
  | { name: 'deleteActivity', args?: MutationDeleteActivityArgs[] | false, alias?: string  } 
  | { name: 'deleteManyActivities', args?: MutationDeleteManyActivitiesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createActivity'
  | 'updateActivity'
  | 'updateManyActivities'
  | 'upsertActivity'
  | 'deleteActivity'
  | 'deleteManyActivities'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateActivityArgs =
  | 'data'
type MutationUpdateActivityArgs =
  | 'data'
  | 'where'
type MutationUpdateManyActivitiesArgs =
  | 'data'
  | 'where'
type MutationUpsertActivityArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteActivityArgs =
  | 'where'
type MutationDeleteManyActivitiesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createActivity: {
    type: 'Activity'
    args: Record<MutationCreateActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ActivityCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity> | prisma.Activity
  }
  updateActivity: {
    type: 'Activity'
    args: Record<MutationUpdateActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ActivityUpdateInput, where: ActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity | null> | prisma.Activity | null
  }
  updateManyActivities: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ActivityUpdateManyMutationInput, where?: ActivityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertActivity: {
    type: 'Activity'
    args: Record<MutationUpsertActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ActivityWhereUniqueInput, create: ActivityCreateInput, update: ActivityUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity> | prisma.Activity
  }
  deleteActivity: {
    type: 'Activity'
    args: Record<MutationDeleteActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ActivityWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity | null> | prisma.Activity | null
  }
  deleteManyActivities: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyActivitiesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ActivityWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'activity', args?: SubscriptionActivityArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'activity'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionActivityArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  activity: {
    type: 'ActivitySubscriptionPayload'
    args: Record<SubscriptionActivityArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ActivitySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ActivitySubscriptionPayload | null> | prisma.ActivitySubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'token', args?: [] | false, alias?: string  } 
  | { name: 'year', args?: [] | false, alias?: string  } 
  | { name: 'plan', args?: [] | false, alias?: string  } 
  | { name: 'acculturation', args?: [] | false, alias?: string  } 
  | { name: 'experimentation', args?: [] | false, alias?: string  } 
  | { name: 'fruition', args?: [] | false, alias?: string  } 
  | { name: 'sharing', args?: [] | false, alias?: string  } 
  | { name: 'privilege', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'name'
  | 'email'
  | 'token'
  | 'year'
  | 'plan'
  | 'acculturation'
  | 'experimentation'
  | 'fruition'
  | 'sharing'
  | 'privilege'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  year: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  plan: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  acculturation: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  experimentation: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  fruition: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  sharing: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  privilege: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ActivitySubscriptionPayload

type ActivitySubscriptionPayloadObject =
  | ActivitySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ActivitySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ActivitySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Activity'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Activity | null> | prisma.Activity | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ActivityPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ActivitySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ActivityPreviousValues | null> | prisma.ActivityPreviousValues | null
  }
}
  

// Types for ActivityPreviousValues

type ActivityPreviousValuesObject =
  | ActivityPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'code', args?: [] | false, alias?: string  } 
  | { name: 'type', args?: [] | false, alias?: string  } 
  | { name: 'investment_type', args?: [] | false, alias?: string  } 
  | { name: 'investment_points', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'date', args?: [] | false, alias?: string  } 

type ActivityPreviousValuesFields =
  | 'id'
  | 'code'
  | 'type'
  | 'investment_type'
  | 'investment_points'
  | 'title'
  | 'description'
  | 'date'



  

export interface ActivityPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  code: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  investment_type: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  investment_points: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  date: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ActivityWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  code?: string | null
  code_not?: string | null
  code_in?: string[]
  code_not_in?: string[]
  code_lt?: string | null
  code_lte?: string | null
  code_gt?: string | null
  code_gte?: string | null
  code_contains?: string | null
  code_not_contains?: string | null
  code_starts_with?: string | null
  code_not_starts_with?: string | null
  code_ends_with?: string | null
  code_not_ends_with?: string | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  investment_type?: string | null
  investment_type_not?: string | null
  investment_type_in?: string[]
  investment_type_not_in?: string[]
  investment_type_lt?: string | null
  investment_type_lte?: string | null
  investment_type_gt?: string | null
  investment_type_gte?: string | null
  investment_type_contains?: string | null
  investment_type_not_contains?: string | null
  investment_type_starts_with?: string | null
  investment_type_not_starts_with?: string | null
  investment_type_ends_with?: string | null
  investment_type_not_ends_with?: string | null
  investment_points?: number | null
  investment_points_not?: number | null
  investment_points_in?: number[]
  investment_points_not_in?: number[]
  investment_points_lt?: number | null
  investment_points_lte?: number | null
  investment_points_gt?: number | null
  investment_points_gte?: number | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  date?: string | null
  date_not?: string | null
  date_in?: string[]
  date_not_in?: string[]
  date_lt?: string | null
  date_lte?: string | null
  date_gt?: string | null
  date_gte?: string | null
  registered_some?: UserWhereInput | null
  AND?: ActivityWhereInput[]
}
export type ActivityWhereInputInputObject =
  | Extract<keyof ActivityWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'code', alias?: string  } 
  | { name: 'code_not', alias?: string  } 
  | { name: 'code_in', alias?: string  } 
  | { name: 'code_not_in', alias?: string  } 
  | { name: 'code_lt', alias?: string  } 
  | { name: 'code_lte', alias?: string  } 
  | { name: 'code_gt', alias?: string  } 
  | { name: 'code_gte', alias?: string  } 
  | { name: 'code_contains', alias?: string  } 
  | { name: 'code_not_contains', alias?: string  } 
  | { name: 'code_starts_with', alias?: string  } 
  | { name: 'code_not_starts_with', alias?: string  } 
  | { name: 'code_ends_with', alias?: string  } 
  | { name: 'code_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_type_not', alias?: string  } 
  | { name: 'investment_type_in', alias?: string  } 
  | { name: 'investment_type_not_in', alias?: string  } 
  | { name: 'investment_type_lt', alias?: string  } 
  | { name: 'investment_type_lte', alias?: string  } 
  | { name: 'investment_type_gt', alias?: string  } 
  | { name: 'investment_type_gte', alias?: string  } 
  | { name: 'investment_type_contains', alias?: string  } 
  | { name: 'investment_type_not_contains', alias?: string  } 
  | { name: 'investment_type_starts_with', alias?: string  } 
  | { name: 'investment_type_not_starts_with', alias?: string  } 
  | { name: 'investment_type_ends_with', alias?: string  } 
  | { name: 'investment_type_not_ends_with', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'investment_points_not', alias?: string  } 
  | { name: 'investment_points_in', alias?: string  } 
  | { name: 'investment_points_not_in', alias?: string  } 
  | { name: 'investment_points_lt', alias?: string  } 
  | { name: 'investment_points_lte', alias?: string  } 
  | { name: 'investment_points_gt', alias?: string  } 
  | { name: 'investment_points_gte', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'date_not', alias?: string  } 
  | { name: 'date_in', alias?: string  } 
  | { name: 'date_not_in', alias?: string  } 
  | { name: 'date_lt', alias?: string  } 
  | { name: 'date_lte', alias?: string  } 
  | { name: 'date_gt', alias?: string  } 
  | { name: 'date_gte', alias?: string  } 
  | { name: 'registered_some', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  token?: string | null
  token_not?: string | null
  token_in?: string[]
  token_not_in?: string[]
  token_lt?: string | null
  token_lte?: string | null
  token_gt?: string | null
  token_gte?: string | null
  token_contains?: string | null
  token_not_contains?: string | null
  token_starts_with?: string | null
  token_not_starts_with?: string | null
  token_ends_with?: string | null
  token_not_ends_with?: string | null
  year?: number | null
  year_not?: number | null
  year_in?: number[]
  year_not_in?: number[]
  year_lt?: number | null
  year_lte?: number | null
  year_gt?: number | null
  year_gte?: number | null
  plan?: number | null
  plan_not?: number | null
  plan_in?: number[]
  plan_not_in?: number[]
  plan_lt?: number | null
  plan_lte?: number | null
  plan_gt?: number | null
  plan_gte?: number | null
  acculturation?: number | null
  acculturation_not?: number | null
  acculturation_in?: number[]
  acculturation_not_in?: number[]
  acculturation_lt?: number | null
  acculturation_lte?: number | null
  acculturation_gt?: number | null
  acculturation_gte?: number | null
  experimentation?: number | null
  experimentation_not?: number | null
  experimentation_in?: number[]
  experimentation_not_in?: number[]
  experimentation_lt?: number | null
  experimentation_lte?: number | null
  experimentation_gt?: number | null
  experimentation_gte?: number | null
  fruition?: number | null
  fruition_not?: number | null
  fruition_in?: number[]
  fruition_not_in?: number[]
  fruition_lt?: number | null
  fruition_lte?: number | null
  fruition_gt?: number | null
  fruition_gte?: number | null
  sharing?: number | null
  sharing_not?: number | null
  sharing_in?: number[]
  sharing_not_in?: number[]
  sharing_lt?: number | null
  sharing_lte?: number | null
  sharing_gt?: number | null
  sharing_gte?: number | null
  privilege?: number | null
  privilege_not?: number | null
  privilege_in?: number[]
  privilege_not_in?: number[]
  privilege_lt?: number | null
  privilege_lte?: number | null
  privilege_gt?: number | null
  privilege_gte?: number | null
  activities_some?: ActivityWhereInput | null
  AND?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'token_not', alias?: string  } 
  | { name: 'token_in', alias?: string  } 
  | { name: 'token_not_in', alias?: string  } 
  | { name: 'token_lt', alias?: string  } 
  | { name: 'token_lte', alias?: string  } 
  | { name: 'token_gt', alias?: string  } 
  | { name: 'token_gte', alias?: string  } 
  | { name: 'token_contains', alias?: string  } 
  | { name: 'token_not_contains', alias?: string  } 
  | { name: 'token_starts_with', alias?: string  } 
  | { name: 'token_not_starts_with', alias?: string  } 
  | { name: 'token_ends_with', alias?: string  } 
  | { name: 'token_not_ends_with', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'year_not', alias?: string  } 
  | { name: 'year_in', alias?: string  } 
  | { name: 'year_not_in', alias?: string  } 
  | { name: 'year_lt', alias?: string  } 
  | { name: 'year_lte', alias?: string  } 
  | { name: 'year_gt', alias?: string  } 
  | { name: 'year_gte', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'plan_not', alias?: string  } 
  | { name: 'plan_in', alias?: string  } 
  | { name: 'plan_not_in', alias?: string  } 
  | { name: 'plan_lt', alias?: string  } 
  | { name: 'plan_lte', alias?: string  } 
  | { name: 'plan_gt', alias?: string  } 
  | { name: 'plan_gte', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'acculturation_not', alias?: string  } 
  | { name: 'acculturation_in', alias?: string  } 
  | { name: 'acculturation_not_in', alias?: string  } 
  | { name: 'acculturation_lt', alias?: string  } 
  | { name: 'acculturation_lte', alias?: string  } 
  | { name: 'acculturation_gt', alias?: string  } 
  | { name: 'acculturation_gte', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'experimentation_not', alias?: string  } 
  | { name: 'experimentation_in', alias?: string  } 
  | { name: 'experimentation_not_in', alias?: string  } 
  | { name: 'experimentation_lt', alias?: string  } 
  | { name: 'experimentation_lte', alias?: string  } 
  | { name: 'experimentation_gt', alias?: string  } 
  | { name: 'experimentation_gte', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'fruition_not', alias?: string  } 
  | { name: 'fruition_in', alias?: string  } 
  | { name: 'fruition_not_in', alias?: string  } 
  | { name: 'fruition_lt', alias?: string  } 
  | { name: 'fruition_lte', alias?: string  } 
  | { name: 'fruition_gt', alias?: string  } 
  | { name: 'fruition_gte', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'sharing_not', alias?: string  } 
  | { name: 'sharing_in', alias?: string  } 
  | { name: 'sharing_not_in', alias?: string  } 
  | { name: 'sharing_lt', alias?: string  } 
  | { name: 'sharing_lte', alias?: string  } 
  | { name: 'sharing_gt', alias?: string  } 
  | { name: 'sharing_gte', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'privilege_not', alias?: string  } 
  | { name: 'privilege_in', alias?: string  } 
  | { name: 'privilege_not_in', alias?: string  } 
  | { name: 'privilege_lt', alias?: string  } 
  | { name: 'privilege_lte', alias?: string  } 
  | { name: 'privilege_gt', alias?: string  } 
  | { name: 'privilege_gte', alias?: string  } 
  | { name: 'activities_some', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface ActivityWhereUniqueInput {
  id?: string | null
}
export type ActivityWhereUniqueInputInputObject =
  | Extract<keyof ActivityWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  name?: string
  email?: string
  token?: string
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
  activities?: ActivityCreateManyWithoutRegisteredInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'activities', alias?: string  } 
  
export interface ActivityCreateManyWithoutRegisteredInput {
  create?: ActivityCreateWithoutRegisteredInput[]
  connect?: ActivityWhereUniqueInput[]
}
export type ActivityCreateManyWithoutRegisteredInputInputObject =
  | Extract<keyof ActivityCreateManyWithoutRegisteredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ActivityCreateWithoutRegisteredInput {
  id?: string | null
  code?: string
  type?: string
  investment_type?: string | null
  investment_points?: number | null
  title?: string
  description?: string | null
  date?: string | null
}
export type ActivityCreateWithoutRegisteredInputInputObject =
  | Extract<keyof ActivityCreateWithoutRegisteredInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  
export interface UserUpdateInput {
  name?: string | null
  email?: string | null
  token?: string | null
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
  activities?: ActivityUpdateManyWithoutRegisteredInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'activities', alias?: string  } 
  
export interface ActivityUpdateManyWithoutRegisteredInput {
  create?: ActivityCreateWithoutRegisteredInput[]
  delete?: ActivityWhereUniqueInput[]
  connect?: ActivityWhereUniqueInput[]
  set?: ActivityWhereUniqueInput[]
  disconnect?: ActivityWhereUniqueInput[]
  update?: ActivityUpdateWithWhereUniqueWithoutRegisteredInput[]
  upsert?: ActivityUpsertWithWhereUniqueWithoutRegisteredInput[]
  deleteMany?: ActivityScalarWhereInput[]
  updateMany?: ActivityUpdateManyWithWhereNestedInput[]
}
export type ActivityUpdateManyWithoutRegisteredInputInputObject =
  | Extract<keyof ActivityUpdateManyWithoutRegisteredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ActivityUpdateWithWhereUniqueWithoutRegisteredInput {
  where?: ActivityWhereUniqueInput
  data?: ActivityUpdateWithoutRegisteredDataInput
}
export type ActivityUpdateWithWhereUniqueWithoutRegisteredInputInputObject =
  | Extract<keyof ActivityUpdateWithWhereUniqueWithoutRegisteredInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ActivityUpdateWithoutRegisteredDataInput {
  code?: string | null
  type?: string | null
  investment_type?: string | null
  investment_points?: number | null
  title?: string | null
  description?: string | null
  date?: string | null
}
export type ActivityUpdateWithoutRegisteredDataInputInputObject =
  | Extract<keyof ActivityUpdateWithoutRegisteredDataInput, string>
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  
export interface ActivityUpsertWithWhereUniqueWithoutRegisteredInput {
  where?: ActivityWhereUniqueInput
  update?: ActivityUpdateWithoutRegisteredDataInput
  create?: ActivityCreateWithoutRegisteredInput
}
export type ActivityUpsertWithWhereUniqueWithoutRegisteredInputInputObject =
  | Extract<keyof ActivityUpsertWithWhereUniqueWithoutRegisteredInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ActivityScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  code?: string | null
  code_not?: string | null
  code_in?: string[]
  code_not_in?: string[]
  code_lt?: string | null
  code_lte?: string | null
  code_gt?: string | null
  code_gte?: string | null
  code_contains?: string | null
  code_not_contains?: string | null
  code_starts_with?: string | null
  code_not_starts_with?: string | null
  code_ends_with?: string | null
  code_not_ends_with?: string | null
  type?: string | null
  type_not?: string | null
  type_in?: string[]
  type_not_in?: string[]
  type_lt?: string | null
  type_lte?: string | null
  type_gt?: string | null
  type_gte?: string | null
  type_contains?: string | null
  type_not_contains?: string | null
  type_starts_with?: string | null
  type_not_starts_with?: string | null
  type_ends_with?: string | null
  type_not_ends_with?: string | null
  investment_type?: string | null
  investment_type_not?: string | null
  investment_type_in?: string[]
  investment_type_not_in?: string[]
  investment_type_lt?: string | null
  investment_type_lte?: string | null
  investment_type_gt?: string | null
  investment_type_gte?: string | null
  investment_type_contains?: string | null
  investment_type_not_contains?: string | null
  investment_type_starts_with?: string | null
  investment_type_not_starts_with?: string | null
  investment_type_ends_with?: string | null
  investment_type_not_ends_with?: string | null
  investment_points?: number | null
  investment_points_not?: number | null
  investment_points_in?: number[]
  investment_points_not_in?: number[]
  investment_points_lt?: number | null
  investment_points_lte?: number | null
  investment_points_gt?: number | null
  investment_points_gte?: number | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  date?: string | null
  date_not?: string | null
  date_in?: string[]
  date_not_in?: string[]
  date_lt?: string | null
  date_lte?: string | null
  date_gt?: string | null
  date_gte?: string | null
  AND?: ActivityScalarWhereInput[]
  OR?: ActivityScalarWhereInput[]
  NOT?: ActivityScalarWhereInput[]
}
export type ActivityScalarWhereInputInputObject =
  | Extract<keyof ActivityScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'code', alias?: string  } 
  | { name: 'code_not', alias?: string  } 
  | { name: 'code_in', alias?: string  } 
  | { name: 'code_not_in', alias?: string  } 
  | { name: 'code_lt', alias?: string  } 
  | { name: 'code_lte', alias?: string  } 
  | { name: 'code_gt', alias?: string  } 
  | { name: 'code_gte', alias?: string  } 
  | { name: 'code_contains', alias?: string  } 
  | { name: 'code_not_contains', alias?: string  } 
  | { name: 'code_starts_with', alias?: string  } 
  | { name: 'code_not_starts_with', alias?: string  } 
  | { name: 'code_ends_with', alias?: string  } 
  | { name: 'code_not_ends_with', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'type_not', alias?: string  } 
  | { name: 'type_in', alias?: string  } 
  | { name: 'type_not_in', alias?: string  } 
  | { name: 'type_lt', alias?: string  } 
  | { name: 'type_lte', alias?: string  } 
  | { name: 'type_gt', alias?: string  } 
  | { name: 'type_gte', alias?: string  } 
  | { name: 'type_contains', alias?: string  } 
  | { name: 'type_not_contains', alias?: string  } 
  | { name: 'type_starts_with', alias?: string  } 
  | { name: 'type_not_starts_with', alias?: string  } 
  | { name: 'type_ends_with', alias?: string  } 
  | { name: 'type_not_ends_with', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_type_not', alias?: string  } 
  | { name: 'investment_type_in', alias?: string  } 
  | { name: 'investment_type_not_in', alias?: string  } 
  | { name: 'investment_type_lt', alias?: string  } 
  | { name: 'investment_type_lte', alias?: string  } 
  | { name: 'investment_type_gt', alias?: string  } 
  | { name: 'investment_type_gte', alias?: string  } 
  | { name: 'investment_type_contains', alias?: string  } 
  | { name: 'investment_type_not_contains', alias?: string  } 
  | { name: 'investment_type_starts_with', alias?: string  } 
  | { name: 'investment_type_not_starts_with', alias?: string  } 
  | { name: 'investment_type_ends_with', alias?: string  } 
  | { name: 'investment_type_not_ends_with', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'investment_points_not', alias?: string  } 
  | { name: 'investment_points_in', alias?: string  } 
  | { name: 'investment_points_not_in', alias?: string  } 
  | { name: 'investment_points_lt', alias?: string  } 
  | { name: 'investment_points_lte', alias?: string  } 
  | { name: 'investment_points_gt', alias?: string  } 
  | { name: 'investment_points_gte', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'date_not', alias?: string  } 
  | { name: 'date_in', alias?: string  } 
  | { name: 'date_not_in', alias?: string  } 
  | { name: 'date_lt', alias?: string  } 
  | { name: 'date_lte', alias?: string  } 
  | { name: 'date_gt', alias?: string  } 
  | { name: 'date_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ActivityUpdateManyWithWhereNestedInput {
  where?: ActivityScalarWhereInput
  data?: ActivityUpdateManyDataInput
}
export type ActivityUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ActivityUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ActivityUpdateManyDataInput {
  code?: string | null
  type?: string | null
  investment_type?: string | null
  investment_points?: number | null
  title?: string | null
  description?: string | null
  date?: string | null
}
export type ActivityUpdateManyDataInputInputObject =
  | Extract<keyof ActivityUpdateManyDataInput, string>
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  name?: string | null
  email?: string | null
  token?: string | null
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  
export interface ActivityCreateInput {
  id?: string | null
  code?: string
  type?: string
  investment_type?: string | null
  investment_points?: number | null
  title?: string
  description?: string | null
  date?: string | null
  registered?: UserCreateManyWithoutActivitiesInput | null
}
export type ActivityCreateInputInputObject =
  | Extract<keyof ActivityCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'registered', alias?: string  } 
  
export interface UserCreateManyWithoutActivitiesInput {
  create?: UserCreateWithoutActivitiesInput[]
  connect?: UserWhereUniqueInput[]
}
export type UserCreateManyWithoutActivitiesInputInputObject =
  | Extract<keyof UserCreateManyWithoutActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutActivitiesInput {
  id?: string | null
  name?: string
  email?: string
  token?: string
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
}
export type UserCreateWithoutActivitiesInputInputObject =
  | Extract<keyof UserCreateWithoutActivitiesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  
export interface ActivityUpdateInput {
  code?: string | null
  type?: string | null
  investment_type?: string | null
  investment_points?: number | null
  title?: string | null
  description?: string | null
  date?: string | null
  registered?: UserUpdateManyWithoutActivitiesInput | null
}
export type ActivityUpdateInputInputObject =
  | Extract<keyof ActivityUpdateInput, string>
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  | { name: 'registered', alias?: string  } 
  
export interface UserUpdateManyWithoutActivitiesInput {
  create?: UserCreateWithoutActivitiesInput[]
  delete?: UserWhereUniqueInput[]
  connect?: UserWhereUniqueInput[]
  set?: UserWhereUniqueInput[]
  disconnect?: UserWhereUniqueInput[]
  update?: UserUpdateWithWhereUniqueWithoutActivitiesInput[]
  upsert?: UserUpsertWithWhereUniqueWithoutActivitiesInput[]
  deleteMany?: UserScalarWhereInput[]
  updateMany?: UserUpdateManyWithWhereNestedInput[]
}
export type UserUpdateManyWithoutActivitiesInputInputObject =
  | Extract<keyof UserUpdateManyWithoutActivitiesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserUpdateWithWhereUniqueWithoutActivitiesInput {
  where?: UserWhereUniqueInput
  data?: UserUpdateWithoutActivitiesDataInput
}
export type UserUpdateWithWhereUniqueWithoutActivitiesInputInputObject =
  | Extract<keyof UserUpdateWithWhereUniqueWithoutActivitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateWithoutActivitiesDataInput {
  name?: string | null
  email?: string | null
  token?: string | null
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
}
export type UserUpdateWithoutActivitiesDataInputInputObject =
  | Extract<keyof UserUpdateWithoutActivitiesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  
export interface UserUpsertWithWhereUniqueWithoutActivitiesInput {
  where?: UserWhereUniqueInput
  update?: UserUpdateWithoutActivitiesDataInput
  create?: UserCreateWithoutActivitiesInput
}
export type UserUpsertWithWhereUniqueWithoutActivitiesInputInputObject =
  | Extract<keyof UserUpsertWithWhereUniqueWithoutActivitiesInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  token?: string | null
  token_not?: string | null
  token_in?: string[]
  token_not_in?: string[]
  token_lt?: string | null
  token_lte?: string | null
  token_gt?: string | null
  token_gte?: string | null
  token_contains?: string | null
  token_not_contains?: string | null
  token_starts_with?: string | null
  token_not_starts_with?: string | null
  token_ends_with?: string | null
  token_not_ends_with?: string | null
  year?: number | null
  year_not?: number | null
  year_in?: number[]
  year_not_in?: number[]
  year_lt?: number | null
  year_lte?: number | null
  year_gt?: number | null
  year_gte?: number | null
  plan?: number | null
  plan_not?: number | null
  plan_in?: number[]
  plan_not_in?: number[]
  plan_lt?: number | null
  plan_lte?: number | null
  plan_gt?: number | null
  plan_gte?: number | null
  acculturation?: number | null
  acculturation_not?: number | null
  acculturation_in?: number[]
  acculturation_not_in?: number[]
  acculturation_lt?: number | null
  acculturation_lte?: number | null
  acculturation_gt?: number | null
  acculturation_gte?: number | null
  experimentation?: number | null
  experimentation_not?: number | null
  experimentation_in?: number[]
  experimentation_not_in?: number[]
  experimentation_lt?: number | null
  experimentation_lte?: number | null
  experimentation_gt?: number | null
  experimentation_gte?: number | null
  fruition?: number | null
  fruition_not?: number | null
  fruition_in?: number[]
  fruition_not_in?: number[]
  fruition_lt?: number | null
  fruition_lte?: number | null
  fruition_gt?: number | null
  fruition_gte?: number | null
  sharing?: number | null
  sharing_not?: number | null
  sharing_in?: number[]
  sharing_not_in?: number[]
  sharing_lt?: number | null
  sharing_lte?: number | null
  sharing_gt?: number | null
  sharing_gte?: number | null
  privilege?: number | null
  privilege_not?: number | null
  privilege_in?: number[]
  privilege_not_in?: number[]
  privilege_lt?: number | null
  privilege_lte?: number | null
  privilege_gt?: number | null
  privilege_gte?: number | null
  AND?: UserScalarWhereInput[]
  OR?: UserScalarWhereInput[]
  NOT?: UserScalarWhereInput[]
}
export type UserScalarWhereInputInputObject =
  | Extract<keyof UserScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'token_not', alias?: string  } 
  | { name: 'token_in', alias?: string  } 
  | { name: 'token_not_in', alias?: string  } 
  | { name: 'token_lt', alias?: string  } 
  | { name: 'token_lte', alias?: string  } 
  | { name: 'token_gt', alias?: string  } 
  | { name: 'token_gte', alias?: string  } 
  | { name: 'token_contains', alias?: string  } 
  | { name: 'token_not_contains', alias?: string  } 
  | { name: 'token_starts_with', alias?: string  } 
  | { name: 'token_not_starts_with', alias?: string  } 
  | { name: 'token_ends_with', alias?: string  } 
  | { name: 'token_not_ends_with', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'year_not', alias?: string  } 
  | { name: 'year_in', alias?: string  } 
  | { name: 'year_not_in', alias?: string  } 
  | { name: 'year_lt', alias?: string  } 
  | { name: 'year_lte', alias?: string  } 
  | { name: 'year_gt', alias?: string  } 
  | { name: 'year_gte', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'plan_not', alias?: string  } 
  | { name: 'plan_in', alias?: string  } 
  | { name: 'plan_not_in', alias?: string  } 
  | { name: 'plan_lt', alias?: string  } 
  | { name: 'plan_lte', alias?: string  } 
  | { name: 'plan_gt', alias?: string  } 
  | { name: 'plan_gte', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'acculturation_not', alias?: string  } 
  | { name: 'acculturation_in', alias?: string  } 
  | { name: 'acculturation_not_in', alias?: string  } 
  | { name: 'acculturation_lt', alias?: string  } 
  | { name: 'acculturation_lte', alias?: string  } 
  | { name: 'acculturation_gt', alias?: string  } 
  | { name: 'acculturation_gte', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'experimentation_not', alias?: string  } 
  | { name: 'experimentation_in', alias?: string  } 
  | { name: 'experimentation_not_in', alias?: string  } 
  | { name: 'experimentation_lt', alias?: string  } 
  | { name: 'experimentation_lte', alias?: string  } 
  | { name: 'experimentation_gt', alias?: string  } 
  | { name: 'experimentation_gte', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'fruition_not', alias?: string  } 
  | { name: 'fruition_in', alias?: string  } 
  | { name: 'fruition_not_in', alias?: string  } 
  | { name: 'fruition_lt', alias?: string  } 
  | { name: 'fruition_lte', alias?: string  } 
  | { name: 'fruition_gt', alias?: string  } 
  | { name: 'fruition_gte', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'sharing_not', alias?: string  } 
  | { name: 'sharing_in', alias?: string  } 
  | { name: 'sharing_not_in', alias?: string  } 
  | { name: 'sharing_lt', alias?: string  } 
  | { name: 'sharing_lte', alias?: string  } 
  | { name: 'sharing_gt', alias?: string  } 
  | { name: 'sharing_gte', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  | { name: 'privilege_not', alias?: string  } 
  | { name: 'privilege_in', alias?: string  } 
  | { name: 'privilege_not_in', alias?: string  } 
  | { name: 'privilege_lt', alias?: string  } 
  | { name: 'privilege_lte', alias?: string  } 
  | { name: 'privilege_gt', alias?: string  } 
  | { name: 'privilege_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserUpdateManyWithWhereNestedInput {
  where?: UserScalarWhereInput
  data?: UserUpdateManyDataInput
}
export type UserUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserUpdateManyDataInput {
  name?: string | null
  email?: string | null
  token?: string | null
  year?: number | null
  plan?: number | null
  acculturation?: number | null
  experimentation?: number | null
  fruition?: number | null
  sharing?: number | null
  privilege?: number | null
}
export type UserUpdateManyDataInputInputObject =
  | Extract<keyof UserUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'token', alias?: string  } 
  | { name: 'year', alias?: string  } 
  | { name: 'plan', alias?: string  } 
  | { name: 'acculturation', alias?: string  } 
  | { name: 'experimentation', alias?: string  } 
  | { name: 'fruition', alias?: string  } 
  | { name: 'sharing', alias?: string  } 
  | { name: 'privilege', alias?: string  } 
  
export interface ActivityUpdateManyMutationInput {
  code?: string | null
  type?: string | null
  investment_type?: string | null
  investment_points?: number | null
  title?: string | null
  description?: string | null
  date?: string | null
}
export type ActivityUpdateManyMutationInputInputObject =
  | Extract<keyof ActivityUpdateManyMutationInput, string>
  | { name: 'code', alias?: string  } 
  | { name: 'type', alias?: string  } 
  | { name: 'investment_type', alias?: string  } 
  | { name: 'investment_points', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'date', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  
export interface ActivitySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ActivityWhereInput | null
  AND?: ActivitySubscriptionWhereInput[]
}
export type ActivitySubscriptionWhereInputInputObject =
  | Extract<keyof ActivitySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  

export type ActivityOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'code_ASC'
  | 'code_DESC'
  | 'type_ASC'
  | 'type_DESC'
  | 'investment_type_ASC'
  | 'investment_type_DESC'
  | 'investment_points_ASC'
  | 'investment_points_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'date_ASC'
  | 'date_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'token_ASC'
  | 'token_DESC'
  | 'year_ASC'
  | 'year_DESC'
  | 'plan_ASC'
  | 'plan_DESC'
  | 'acculturation_ASC'
  | 'acculturation_DESC'
  | 'experimentation_ASC'
  | 'experimentation_DESC'
  | 'fruition_ASC'
  | 'fruition_DESC'
  | 'sharing_ASC'
  | 'sharing_DESC'
  | 'privilege_ASC'
  | 'privilege_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  